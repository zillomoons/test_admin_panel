{"version":3,"sources":["constants/ChartConstant.js","components/shared-components/ChartWidget/index.js","components/shared-components/DonutChartWidget/index.js","components/shared-components/RegiondataWidget/index.js","views/app-views/dashboards/analytic/AnalyticDashboardData.js","views/app-views/dashboards/analytic/index.js"],"names":["COLOR_2","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","type","sparkline","fixed","x","title","seriesName","marker","titleStyle","zIndex","extraStyle","right","top","ChartWidget","height","xAxis","customOptions","card","extra","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","className","ref","defaultProps","defaultOption","Chart","props","DonutChartWidget","useBreakpoint","Grid","mapColor","getHighlightedRegion","name","data","length","i","elm","getRegionHoverColor","utils","shadeColor","MapChart","setTooltipContent","mapSource","mapType","transform","data-tip","projectionConfig","scale","geography","geographies","map","geo","geoName","properties","NAME_1","onMouseEnter","value","getRegionValue","onMouseLeave","hover","outline","rsmKey","Map","useState","content","setContent","renderDataList","RegiondataWidget","list","getBreakPoint","includes","bodyStyle","xs","sm","md","lg","minHeight","WorldMap","regionData","pagesViewData","url","amount","sessionColor","sessionData","sessionLabels","conbinedSessionData","arr","jointSessionData","socialMediaReferralData","percentage","uniqueVisitorsDataDay","uniqueVisitorsDataWeek","uniqueVisitorsDataMonth","socialMediaReferralIcon","FacebookFilled","TwitterSquareFilled","YoutubeFilled","LinkedinFilled","DribbbleSquareFilled","Option","Select","rederRegionTopEntrance","src","AnalyticDashboard","uniqueVisitorsData","setUniqueVisitorsData","gutter","xxl","justify","maxWidth","Flex","alignItems","itemLayout","dataSource","renderItem","item","Item","thousandSeparator","displayType","index","getSignNum","ArrowUpOutlined","ArrowDownOutlined","defaultValue","onChange","console","log"],"mappings":"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","file":"static/js/8.65f4ca27.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<div className=\"position-relative\">\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra } = props\r\n\tlet options = defaultOption\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} — ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 428 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const regionData = [\r\n\t{\r\n\t\tcolor: '#3e82f7',\r\n\t\tname: 'United States of America',\r\n\t\tvalue: '37.61%'\r\n  \t},\r\n  \t{\r\n\t\tcolor: '#04d182',\r\n\t\tname: 'Brazil',\r\n\t\tvalue: '16.79%'\r\n  \t},\r\n \t {\r\n\t\tcolor: '#ffc542',\r\n\t\tname: 'India',\r\n\t\tvalue: '12.42%'\r\n \t},\r\n  \t{\r\n\t\tcolor: '#fa8c16',\r\n\t\tname: 'China',\r\n\t\tvalue: '9.85%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#ff6b72',\r\n\t\tname: 'Malaysia',\r\n\t\tvalue: '7.68%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#a461d8',\r\n\t\tname: 'Thailand',\r\n\t\tvalue: '5.11%'\r\n\t}\r\n]\r\n\r\nexport const pagesViewData = [\r\n\t{\r\n    title: 'Home',\r\n    url:'/app/home/',\r\n    amount: 7616\r\n  },\r\n  {\r\n    title: 'Resources',\r\n    url:'/app/resources/',\r\n    amount: 6923\r\n  },\r\n  {\r\n    title: 'Integrations',\r\n    url: '/integrations/paypal/',\r\n    amount: 5228\r\n  },\r\n  {\r\n    title: 'Partners',\r\n    url: '/partners/our-partners/',\r\n    amount: 3512\r\n  },\r\n  {\r\n    title: 'Developers',\r\n    url: 'developers/docs/',\r\n    amount: 1707\r\n  }\r\n]\r\n\r\nexport const sessionColor = [COLORS[3], COLORS[0], COLORS[1]]\r\nexport const sessionData = [3561, 1443, 2462]\r\nexport const sessionLabels = [\"Dasktops\", \"Tablets\", \"Mobiles\"]\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const socialMediaReferralData = [\r\n\t{\r\n\t\ttitle: 'Facebook',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47]\r\n\t\t}],\r\n\t\tpercentage: 30.1,\r\n\t\tamount: 322\r\n\t},\r\n\t{\r\n\t\ttitle: 'Twitter',\r\n\t\tdata:  [{\r\n\t\t\tdata: [9, 32, 12, 42, 25, 33]\r\n\t\t}],\r\n\t\tpercentage: 21.6,\r\n\t\tamount: 217\r\n\t},\r\n\t{\r\n\t\ttitle: 'Youtube',\r\n\t\tdata:  [{\r\n\t\t\tdata: [10, 9, 29, 19, 22, 9, 12]\r\n\t\t}],\r\n\t\tpercentage: -7.1,\r\n\t\tamount: 188\r\n\t},\r\n\t{\r\n\t\ttitle: 'Linkedin',\r\n\t\tdata:  [{\r\n\t\t\tdata: [25, 66, 41, 89, 63, 25, 44]\r\n\t\t}],\r\n\t\tpercentage: 11.9,\r\n\t\tamount: 207\r\n\t\t},\r\n\t{\r\n\t\ttitle: 'Dribbble',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]\r\n\t\t}],\r\n\t\tpercentage: -28.5,\r\n\t\tamount: 86\r\n\t}\r\n]\r\n\r\nexport const uniqueVisitorsDataDay = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [12, 4, 7, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [8, 6, 10, 11]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '12:00 AM', \r\n\t\t'6:00 AM', \r\n\t\t'12:00 PM', \r\n\t\t'6:00 PM', \r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataWeek = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '01 Jan', \r\n\t  '02 Jan', \r\n\t  '03 Jan', \r\n\t  '04 Jan', \r\n\t  '05 Jan', \r\n\t  '06 Jan', \r\n\t  '07 Jan'\r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataMonth = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 25, 31, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 15, 20, 16]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t\t'03 Jan', \r\n\t\t'06 Jan', \r\n\t\t'09 Jan', \r\n\t\t'12 Jan', \r\n\t\t'15 Jan',\r\n\t\t'18 Jan',\r\n\t\t'21 Jan',\r\n\t\t'24 Jan',\r\n\t\t'27 Jan',\r\n\t\t'30 Jan'\r\n\t]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Card, Avatar, Select, Tag, Badge, List } from 'antd';\r\nimport RegiondataWidget from 'components/shared-components/RegiondataWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport NumberFormat from 'react-number-format';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexSparklineChartDefultOption, COLORS } from 'constants/ChartConstant';\r\nimport utils from 'utils'\r\nimport {\r\n  FacebookFilled,\r\n  TwitterSquareFilled,\r\n  LinkedinFilled,\r\n  YoutubeFilled,\r\n  DribbbleSquareFilled,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined\r\n} from '@ant-design/icons';\r\nimport { \r\n  regionData, \r\n  sessionData, \r\n  sessionLabels, \r\n  conbinedSessionData,\r\n  sessionColor,\r\n  pagesViewData,\r\n  socialMediaReferralData,\r\n  uniqueVisitorsDataWeek,\r\n  uniqueVisitorsDataDay,\r\n  uniqueVisitorsDataMonth\r\n} from './AnalyticDashboardData'\r\n\r\nconst socialMediaReferralIcon = [\r\n  <FacebookFilled style={{color: '#1774eb'}} />,\r\n  <TwitterSquareFilled style={{color: '#1c9deb'}}/>,\r\n  <YoutubeFilled style={{color: '#f00'}}/>,\r\n  <LinkedinFilled style={{color: '#0077b4'}} />,\r\n  <DribbbleSquareFilled  style={{color: '#e44a85'}} />\r\n]\r\n\r\nconst { Option } = Select;\r\n\r\nconst rederRegionTopEntrance = (\r\n  <div className=\"mb-4\">\r\n    <div className=\"d-flex align-items-center\">\r\n      <Avatar size={20} src=\"/img/flags/us.png\"/>\r\n      <h2 className=\"mb-0 ml-2 font-weight-bold\">37.61%</h2>\r\n    </div>\r\n    <span className=\"text-muted\">Top entrance region</span>\r\n  </div>\r\n)\r\n\r\nexport const AnalyticDashboard = () => {\r\n\r\n  const [uniqueVisitorsData, setUniqueVisitorsData] = useState(uniqueVisitorsDataWeek)\r\n\r\n  const handleVisitorsChartChange = value => {\r\n    console.log(value)\r\n    switch (value) {\r\n      case 'day':\r\n        setUniqueVisitorsData(uniqueVisitorsDataDay)\r\n        break;\r\n      case 'week':\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek)\r\n        break;\r\n      case 'month':\r\n        setUniqueVisitorsData(uniqueVisitorsDataMonth)\r\n        break;\r\n      default:\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek)\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={18}>\r\n          <RegiondataWidget \r\n            title=\"Entrance by region\"\r\n            data={regionData}\r\n            content={rederRegionTopEntrance}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={6}>\r\n          <DonutChartWidget \r\n            series={sessionData} \r\n            labels={sessionLabels} \r\n            title=\"Sessions Device\"\r\n            customOptions={{colors: sessionColor}}\r\n            extra={\r\n              <Row  justify=\"center\">\r\n                <Col xs={20} sm={20} md={20} lg={24}>\r\n                  <div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n                    {conbinedSessionData.map(elm => (\r\n                      <Flex alignItems=\"center\" justifyContent=\"between\" className=\"mb-3\" key={elm.label}>\r\n                        <div>\r\n                          <Badge color={elm.color} />\r\n                          <span className=\"text-gray-light\">{elm.label}</span>\r\n                        </div>\r\n                        <span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n                      </Flex>\r\n                    ))}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Most visited pages\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={pagesViewData}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                    <div>\r\n                      <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                      <span className=\"text-muted\">{item.url}</span>\r\n                    </div>\r\n                    <div>\r\n                      <Tag color=\"blue\">\r\n                        <span className=\"font-weight-bold\">\r\n                          <NumberFormat value={item.amount} thousandSeparator={true} displayType=\"text\" ></NumberFormat>\r\n                        </span>\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Social media referrals\">\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={socialMediaReferralData}\r\n            renderItem={(item, index) => (\r\n              <List.Item>\r\n                <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <span className=\"font-size-xxl\">{socialMediaReferralIcon[index]}</span>\r\n                    <div className=\"ml-3\">\r\n                      <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                      <span className=\"text-muted\">Total: <span className=\"font-weight-bold\">{item.amount}</span></span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <ApexChart \r\n                      options={{...apexSparklineChartDefultOption, ...{colors: [utils.getSignNum(item.percentage, COLORS[1], COLORS[2])]}}} \r\n                      series={item.data} \r\n                      height={25} \r\n                      width={50}\r\n                    />\r\n                    <span className=\"ml-3 font-weight-bold\">{item.percentage}%</span>\r\n                    <span className={`ml-1 ${utils.getSignNum(item.percentage, 'text-success', 'text-danger')}`}>\r\n                      {utils.getSignNum(item.percentage, <ArrowUpOutlined />, <ArrowDownOutlined />)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={12}>\r\n          <ChartWidget \r\n            series={uniqueVisitorsData.series} \r\n            xAxis={uniqueVisitorsData.categories} \r\n            title=\"Unique Visitors\"\r\n            height={410}\r\n            type=\"bar\"\r\n            customOptions={\r\n              {\r\n                colors: [COLORS[1], COLORS[0]]\r\n              }\r\n            }\r\n            extra={\r\n              <Select defaultValue=\"week\" size=\"small\" style={{ width: 120 }} onChange={handleVisitorsChartChange}>\r\n                <Option value=\"day\">Day</Option>\r\n                <Option value=\"week\">Week</Option>\r\n                <Option value=\"month\">Month</Option>\r\n              </Select>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AnalyticDashboard"],"sourceRoot":""}