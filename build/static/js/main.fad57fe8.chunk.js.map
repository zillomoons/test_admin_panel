{"version":3,"sources":["components/shared-components/Loading/index.js","components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/index.js","lang/entries/ru_RU.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","TeamOutlined","MailOutlined","docsNavTree","SettingOutlined","MobileOutlined","ProfileOutlined","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","color","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","hex","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","AppLocale","ru","antd","antdRuRU","messages","ruMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","data","input","screens","breakpoints","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.fad57fe8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig';\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  // locale: 'en',\r\n  locale: 'ru',\r\n  navType: NAV_TYPE_SIDE,\r\n  topNavColor: '#3e82f7',\r\n  headerNavColor: '',\r\n  mobileNav: false,\r\n  currentTheme: 'light',\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  ShoppingCartOutlined,\r\n  ShoppingOutlined,\r\n  UserOutlined,\r\n  TeamOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  ShopOutlined,\r\n  GiftOutlined,\r\n  PictureOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: 'dashboards',\r\n    path: `${APP_PREFIX_PATH}/dashboards`,\r\n    title: 'sidenav.dashboard',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'dashboards-default',\r\n        path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n        title: 'sidenav.dashboard.default',\r\n        icon: DashboardOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'dashboards-ecommerce',\r\n        path: `${APP_PREFIX_PATH}/dashboards/ecommerce`,\r\n        title: 'sidenav.dashboard.ecommerce',\r\n        icon: ShoppingCartOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'dashboards-ecommerce-productList',\r\n            path: `${APP_PREFIX_PATH}/dashboards/ecommerce/product-list`,\r\n            title: 'sidenav.dashboard.ecommerce.productList',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'dashboards-ecommerce-category',\r\n            path: `${APP_PREFIX_PATH}/dashboards/ecommerce/category`,\r\n            title: 'sidenav.dashboard.ecommerce.category',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'dashboards-ecommerce-collection',\r\n            path: `${APP_PREFIX_PATH}/dashboards/ecommerce/collection`,\r\n            title: 'sidenav.dashboard.ecommerce.collection',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'dashboards-ecommerce-combo',\r\n            path: `${APP_PREFIX_PATH}/dashboards/ecommerce/combo`,\r\n            title: 'sidenav.dashboard.ecommerce.combo',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'dashboards-orders',\r\n        path: `${APP_PREFIX_PATH}/dashboards/orders`,\r\n        title: 'sidenav.dashboard.orders',\r\n        icon: ShoppingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'dashboards-clients',\r\n        path: `${APP_PREFIX_PATH}/dashboards/clients`,\r\n        title: 'sidenav.dashboard.clients',\r\n        icon: UserOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'dashboards-clients-clientList',\r\n            path: `${APP_PREFIX_PATH}/dashboards/clients/client-list`,\r\n            title: 'sidenav.dashboard.clients.list',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'dashboards-clients-clientGroup',\r\n            path: `${APP_PREFIX_PATH}/dashboards/clients/client-group`,\r\n            title: 'sidenav.dashboard.clients.group',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'dashboards-banners',\r\n        path: `${APP_PREFIX_PATH}/dashboards/banners`,\r\n        title: 'sidenav.dashboard.banners',\r\n        icon: PictureOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'dashboards-promo',\r\n        path: `${APP_PREFIX_PATH}/dashboards/promo`,\r\n        title: 'sidenav.dashboard.promo',\r\n        icon: GiftOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'dashboards-stores',\r\n        path: `${APP_PREFIX_PATH}/dashboards/stores`,\r\n        title: 'sidenav.dashboard.stores',\r\n        icon: ShopOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'dashboards-stores-addresses',\r\n            path: `${APP_PREFIX_PATH}/dashboards/stores/addresses`,\r\n            title: 'sidenav.dashboard.stores.addresses',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'dashboards-stores-geofences',\r\n            path: `${APP_PREFIX_PATH}/dashboards/stores/geofences`,\r\n            title: 'sidenav.dashboard.stores.geofences',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'dashboards-employees',\r\n        path: `${APP_PREFIX_PATH}/dashboards/employees`,\r\n        title: 'sidenav.dashboard.employees',\r\n        icon: TeamOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'dashboards-mail',\r\n        path: `${APP_PREFIX_PATH}/dashboards/mail`,\r\n        title: 'sidenav.dashboard.mail',\r\n        icon: MailOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst docsNavTree = [\r\n  {\r\n    key: 'docs',\r\n    path: `${APP_PREFIX_PATH}/docs`,\r\n    title: 'sidenav.system',\r\n    icon: '',\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'docs-setting',\r\n        path: `${APP_PREFIX_PATH}/docs/setting`,\r\n        title: 'sidenav.system.setting',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'docs-mobile',\r\n        path: `${APP_PREFIX_PATH}/docs/mobile`,\r\n        title: 'sidenav.system.mobile',\r\n        icon: MobileOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'docs-changelog',\r\n        path: `${APP_PREFIX_PATH}/docs/changelog`,\r\n        title: 'sidenav.system.changelog',\r\n        icon: ProfileOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree, ...docsNavTree];\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport lang from 'assets/data/language.data.json';\r\nimport { connect } from 'react-redux';\r\nimport { onLocaleChange } from 'redux/actions/Theme';\r\n\r\nfunction getLanguageDetail(locale) {\r\n  const data = lang.filter((elm) => elm.langId === locale);\r\n  return data[0];\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n  const language = getLanguageDetail(locale);\r\n  const { langName, icon } = language;\r\n  return (\r\n    <div className='d-flex align-items-center'>\r\n      <img\r\n        style={{ maxWidth: '20px' }}\r\n        src={`/img/flags/${icon}.png`}\r\n        alt={langName}\r\n      />\r\n      <span className='font-weight-semibold ml-2'>\r\n        {langName} <DownOutlined className='font-size-xs' />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n  const languageOption = (\r\n    <Menu>\r\n      {lang.map((elm, i) => {\r\n        return (\r\n          <Menu.Item\r\n            key={i}\r\n            className={\r\n              locale === elm.langId ? 'ant-dropdown-menu-item-active' : ''\r\n            }\r\n            onClick={() => onLocaleChange(elm.langId)}\r\n          >\r\n            <span className='d-flex justify-content-between align-items-center'>\r\n              <div>\r\n                <img\r\n                  style={{ maxWidth: '20px' }}\r\n                  src={`/img/flags/${elm.icon}.png`}\r\n                  alt={elm.langName}\r\n                />\r\n                <span className='font-weight-normal ml-2'>{elm.langName}</span>\r\n              </div>\r\n              {locale === elm.langId ? (\r\n                <CheckOutlined className='text-success' />\r\n              ) : null}\r\n            </span>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown\r\n      placement='bottomRight'\r\n      overlay={languageOption}\r\n      trigger={['click']}\r\n    >\r\n      {configDisplay ? (\r\n        <a href='#/' className='text-gray' onClick={(e) => e.preventDefault()}>\r\n          <SelectedLanguage locale={locale} />\r\n        </a>\r\n      ) : (\r\n        <Menu mode='horizontal'>\r\n          <Menu.Item>\r\n            <a href='#/' onClick={(e) => e.preventDefault()}>\r\n              <GlobalOutlined className='nav-icon mr-0' />\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } = theme;\r\n  return { locale };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onLocaleChange })(NavLanguage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport {\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_DARK,\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = ['#3e82f7', '#24a772', '#de4436', '#924aca', '#193550'];\r\n\r\nconst ListOption = ({ name, selector, disabled, vertical }) => (\r\n  <div\r\n    className={`my-4 ${\r\n      vertical ? '' : 'd-flex align-items-center justify-content-between'\r\n    }`}\r\n  >\r\n    <div\r\n      className={`${disabled ? 'opacity-0-3' : ''} ${vertical ? 'mb-3' : ''}`}\r\n    >\r\n      {name}\r\n    </div>\r\n    <div>{selector}</div>\r\n  </div>\r\n);\r\n\r\nexport const ThemeConfigurator = ({\r\n  navType,\r\n  sideNavTheme,\r\n  navCollapsed,\r\n  topNavColor,\r\n  headerNavColor,\r\n  locale,\r\n  currentTheme,\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n}) => {\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const isCollapse = navCollapsed;\r\n\r\n  const { switcher, themes } = useThemeSwitcher();\r\n\r\n  const toggleTheme = (isChecked) => {\r\n    onHeaderNavColorChange('');\r\n    const changedTheme = isChecked ? 'dark' : 'light';\r\n    onSwitchTheme(changedTheme);\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n  const ontopNavColorClick = (value) => {\r\n    onHeaderNavColorChange('');\r\n    const { rgb } = value;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    const hex = utils.rgbaToHex(rgba);\r\n    onTopNavColorChange(hex);\r\n  };\r\n  const onHeaderNavColorClick = (value) => {\r\n    const { rgb } = value;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    const hex = utils.rgbaToHex(rgba);\r\n    onHeaderNavColorChange(hex);\r\n  };\r\n\r\n  const onNavTypeClick = (value) => {\r\n    onHeaderNavColorChange('');\r\n    if (value === NAV_TYPE_TOP) {\r\n      onTopNavColorChange(colorOptions[0]);\r\n      toggleCollapsedNav(false);\r\n    }\r\n    onNavTypeChange(value);\r\n  };\r\n\r\n  const genCopySettingJson = (configState) =>\r\n    JSON.stringify(configState, null, 2);\r\n\r\n  return (\r\n    <>\r\n      <div className='mb-5'>\r\n        <h4 className='mb-3 font-weight-bold'>Navigation</h4>\r\n        {isNavTop ? (\r\n          <ListOption\r\n            name='Top Nav Color:'\r\n            vertical\r\n            selector={\r\n              <ColorPicker\r\n                color={topNavColor}\r\n                colorChange={ontopNavColorClick}\r\n              />\r\n            }\r\n          />\r\n        ) : (\r\n          <ListOption\r\n            name='Header Nav Color:'\r\n            vertical\r\n            selector={\r\n              <ColorPicker\r\n                color={headerNavColor}\r\n                colorChange={onHeaderNavColorClick}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n\r\n        <ListOption\r\n          name='Navigation Type:'\r\n          selector={\r\n            <Radio.Group\r\n              size='small'\r\n              onChange={(e) => onNavTypeClick(e.target.value)}\r\n              value={navType}\r\n            >\r\n              <Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n              <Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n        />\r\n        <ListOption\r\n          name='Side Nav Color:'\r\n          selector={\r\n            <Radio.Group\r\n              disabled={isNavTop}\r\n              size='small'\r\n              onChange={(e) => onNavStyleChange(e.target.value)}\r\n              value={sideNavTheme}\r\n            >\r\n              <Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n              <Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n          disabled={isNavTop}\r\n        />\r\n        <ListOption\r\n          name='Side Nav Collapse:'\r\n          selector={\r\n            <Switch\r\n              disabled={isNavTop}\r\n              checked={isCollapse}\r\n              onChange={() => toggleCollapsedNav(!navCollapsed)}\r\n            />\r\n          }\r\n          disabled={isNavTop}\r\n        />\r\n        <ListOption\r\n          name='Dark Theme:'\r\n          selector={\r\n            <Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n          }\r\n        />\r\n      </div>\r\n      <div className='mb-5'>\r\n        <h4 className='mb-3 font-weight-bold'>Locale</h4>\r\n        <ListOption name='Language:' selector={<NavLanguage configDisplay />} />\r\n      </div>\r\n      <div>\r\n        <CopyToClipboard\r\n          text={genCopySettingJson({\r\n            navType,\r\n            sideNavTheme,\r\n            navCollapsed,\r\n            topNavColor,\r\n            headerNavColor,\r\n            locale,\r\n            currentTheme,\r\n          })}\r\n          onCopy={() =>\r\n            message.success(\r\n              'Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.'\r\n            )\r\n          }\r\n        >\r\n          <Button icon={<CopyOutlined />} block>\r\n            <span>Copy Setting</span>\r\n          </Button>\r\n        </CopyToClipboard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n  } = theme;\r\n  return {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator);\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover='content' />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/dashboards`}\r\n          component={lazy(() => import(`./dashboards`))}\r\n        />\r\n        <Redirect\r\n          from={`${APP_PREFIX_PATH}`}\r\n          to={`${APP_PREFIX_PATH}/dashboards`}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","// import enLang from './entries/en_US';\r\n// import zhLang from './entries/zh_CN';\r\n// import frLang from './entries/fr_FR';\r\n// import jaLang from './entries/ja_JP';\r\nimport ruLang from './entries/ru_RU';\r\n\r\nconst AppLocale = {\r\n  ru: ruLang,\r\n  //   en: enLang,\r\n  //   zh: zhLang,\r\n  //   fr: frLang,\r\n  //   ja: jaLang,\r\n};\r\n\r\nexport default AppLocale;\r\n","import antdRuRU from 'antd/es/locale/ru_RU';\r\nimport ruMsg from '../locales/ru_RU.json';\r\n\r\nconst RuLang = {\r\n  antd: antdRuRU,\r\n  locale: 'ru',\r\n  messages: {\r\n    ...ruMsg,\r\n  },\r\n};\r\nexport default RuLang;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport AppLayout from 'layouts/app-layout';\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from 'lang';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location} />\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } = theme;\r\n  const { token } = auth;\r\n  return { locale, token };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}